# yml 모든 스프링 부트의 설정을 할 수 있다.
server:
  port: 8000
  servlet:
    context-path: /
  
# h2 데이터 베이스
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  h2:
    console:
      enabled: true
      
  datasource:
    driver-class-name: org.h2.Driver
#    url: jdbc:h2:tcp://localhost/~/test;MODE=MySQL;
    hikari:
      jdbc-url: jdbc:h2:tcp://localhost/~/test;MODE=MySQL
    username: sa
    password :
  jpa:
    defer-datasource-initialization: true
# open-in-view: true : lazy 로딩이 가능하다.    
    open-in-view: true
#    generate-ddl: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
    # 프로젝트를 시작할 때마다 테이블을 create 한다. -> 기존에 user 테이블이 있어도 삭제하고 실행할 때 마다 새로 만든다. 나중에 update로 바꿔야한다.
      ddl-auto: create
    #  ddl-auto: update
#    properties:
#      hibernate.hbm2ddl.auto: create
      naming:
      # Entity를 만들 때 변수명 그대로 필드를 만들어준다. 
      # SpringPhysicalNamingStrategyStandardImpl는 변수명 _로 만들어준다. myEmail -> my_email
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      # false JPA가 사용하는 기본 넘버링 전략을 따라가지 않는다. true -> 기본 넘버링 전략을 따라간다.
      use-new-id-geneFrator-mappings: false
    # 콘솔창에 sql 문 보이게 하기
    show-sql: true
    properties:
      # 콘솔창에 formatting
      hibernate.format_sql : true
  jackson:
    serialization:
      fail-on-empty-beans: false
      
  # jsp 파일 수정후 실시간 반영  
  devtools:
    livereload:
      enabled: true
  thymeleaf:
    cache: false
  sql:
    init:
      encoding: UTF-8
    